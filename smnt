#!/bin/bash
# tjh
# bin/smnt
# Make Secure Mirrored Device

# smnt [mount point] [dev0]
# smnt [mount point] [dev0] [dev1]

set -e

if [ -e $1 ]
then
	mntpnt=$1
else
		2>&1 echo "[$(basename $0)] -1 No valid Mount Point"
		exit -1
fi

if [ -e $2 ]
then
	device0="$2"
else
	dev_start="/dev/" # TODO Implement local dir 
	device0="$dev_start$2"
	if [ ! -e "$device0" ]
	then
		2>&1 echo "[$(basename $0)] -2 No valid Device"
		exit -2
	fi

fi



num0=0
# autofind free devnode
while [[ -e "/dev/mapper/sdev$num0" ]]
do
	num0+=1
done

crypt_dev0="/dev/mapper/sdev$num0"

fs=btrfs
fs_opt=""

echo "[$(basename $0)] Password for the Secure Device >"
read -s password

echo "[$(basename $0)] Setup $device0 as $crypt_dev0"
echo "$password" | cryptsetup open $device0 $(basename $crypt_dev0)

if [ -e "$dev_start$3" ]
then
	device1="$dev_start$3"

	num1=$num0 
	# autofind free devnode
	while [[ -e "/dev/mapper/smdev$num1" ]]
	do
		num1+=1
	done
	
	crypt_dev1="/dev/mapper/smdev$num1"

	echo "[$(basename $0)] Setup $device1 as $crypt_dev1"
	rev "$password" | cryptsetup open $device1 $(basename $crypt_dev1)

fi

mount -t $fs $crypt_dev0 $mntpnt


echo "[$(basename $0)] Unmounting [Enter]"
read -s response
sync

umount $mntpnt
cryptsetup close $crypt_dev0

if [ -e "$device1" ]
then
	cryptsetup close $crypt_dev1
fi
